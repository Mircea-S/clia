#!/bin/bash

# === Configuration ===
# Use "local" for CLI; or set to remote IP like "http://192.168.1.50:11434"
OLLAMA_HOST="${OLLAMA_HOST:-local}"
MODEL="${OLLAMA_DEFAULT_MODEL:-llama3.2}"

# === Parse options ===
while [[ "$1" =~ ^- ]]; do
  case "$1" in
    -m)
      shift
      MODEL="$1"
      shift
      ;;
    *)
      echo "Unknown option: $1"
      exit 1
      ;;
  esac
done

# === Input handling ===
if [ "$#" -gt 0 ]; then
  QUESTION="$*"
else
  echo -n "Question: "
  read -r QUESTION
fi

if [ -z "$QUESTION" ]; then
  echo "No question provided."
  exit 1
fi

# === Prompt Template ===
FULL_PROMPT=$(cat <<EOF
You are a Linux expert. The user will ask questions about how to perform tasks or understand concepts in Linux.

Your job is to:

1. If the question is about **doing something in Linux**, provide a single, complete, copy-paste-ready terminal command first.
   - Then explain each part of the command clearly.
   - Only mention graphical or alternative methods at the end, and only if appropriate.
2. If the question is about **understanding a concept** (e.g. "what are efivars?"), provide a clear explanation targeted at an intermediate technical user.
   - Use concise, accurate language and examples if helpful.
   - If relevant, mention any related commands or system paths.

Never start your answer with GUI-based suggestions unless explicitly asked.

Here is the user’s question:
$QUESTION
EOF
)

# === Local Ollama ===
if [[ "$OLLAMA_HOST" == "local" ]]; then
  if ! command -v ollama &>/dev/null; then
    echo "❌ 'ollama' is not installed or not in your PATH."
    echo "You can install it from: https://ollama.com/download"
    exit 1
  fi

  # Check if model is available locally
  if ! ollama list | grep -qw "$MODEL"; then
    echo "Model '$MODEL' is not available locally."
    read -p "Do you want to pull it now? (y/N): " CONFIRM
    if [[ "$CONFIRM" =~ ^[Yy]$ ]]; then
      ollama pull "$MODEL" || {
        echo "Failed to pull model '$MODEL'."
        exit 1
      }
    else
      echo "Aborting."
      exit 1
    fi
  fi

  # Run locally
  ollama run "$MODEL" "$FULL_PROMPT"

# === Remote API ===
else
  RESPONSE=$(curl -s -X POST "$OLLAMA_HOST/api/chat" \
    -H "Content-Type: application/json" \
    -d @- <<EOF
{
  "model": "$MODEL",
  "messages": [
    { "role": "user", "content": "$FULL_PROMPT" }
  ],
  "stream": false
}
EOF
)

  # Extract "content"
  echo "$RESPONSE" | grep -o '"content":[[:space:]]*".*"' | sed -E 's/^"content":[[:space:]]*"//' | sed 's/"$//' | sed 's/\\"/"/g; s/\\n/\n/g'
fi
